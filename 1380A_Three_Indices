#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
vector<pair<int,int>> v;
int n;

void printVector();
bool compare(pair<int,int> a, pair<int,int> b);// (key,value) value값을 기준으로 오름차순정렬

int main(void){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    int T,tmp;
    int i,j,k;
    bool check;

    cin >> T;
    for(int a = 0; a < T; a++){
        cin >> n;
        for(int b = 0; b < n; b++){
            cin >> tmp;
            v.push_back(make_pair(b+1,tmp));
        }
        sort(v.begin(), v.end(), compare);
        tmp = 2;
        check = false;
        i = j = k = -1;
        while(tmp < n && check == false){// tmp 0,1,2 마지노선 2 idx
            j = v[tmp].first; //j에 value값이 가장 큰 key값 저장
            for(int b = 0; b < tmp; b++){
                if( v[b].first < j ){//i 찾기
                    i = v[b].first;
                  //  cout << "i: " << i << '\n';
                    for(int c = b+1; c < tmp; c++){
                        if(v[c].first > j){ // k착지
                            k = v[c].first;
                            check = true;
                 //           cout << "j: " << j << '\n';
                            break;
                        }
                    }
                    if( check == true)
                        break;
                }
            }
            tmp++;
            if( i != -1 && k != -1 ){
                cout << "YES \n";
                cout << i << ' ' << j << ' ' << k << '\n';
                break;
            }
        }
        if( i == -1 || k == -1)
            cout << "NO \n";
        v.clear();
    }
}
void printVector(){
    for(int i = 0; i < n; i++){
        cout << v[i].first << ' ' << v[i].second << '\n';
    }
}
bool compare(pair<int,int> a, pair<int,int> b){
    return a.second < b.second;
}
